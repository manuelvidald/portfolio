---
// src/components/ContactSection.astro
---
<section id="contact" class="contact">
    <div class="container">
        <div class="section-header">
            <span class="section-eyebrow">Get In Touch</span>
            <h2 class="section-title">Contact Me</h2>
            <p class="section-subtitle">
                Interested in working together? Feel free to reach out through any of these channels.
            </p>
        </div>

        <div class="contact-grid">
            <div class="contact-info">
                <div class="contact-card">
                    <div class="contact-icon">
                        <i class="fas fa-envelope"></i>
                    </div>
                    <div class="contact-details">
                        <h4>Email</h4>
                        <a href="mailto:manuel.vidald@gmail.com">manuel.vidald@gmail.com</a>
                    </div>
                </div>

                <div class="contact-card">
                    <div class="contact-icon">
                        <i class="fas fa-phone"></i>
                    </div>
                    <div class="contact-details">
                        <h4>Phone</h4>
                        <a href="tel:+34644096580">+34 644 096 580</a>
                    </div>
                </div>

                <div class="contact-card">
                    <div class="contact-icon">
                        <i class="fas fa-map-marker-alt"></i>
                    </div>
                    <div class="contact-details">
                        <h4>Location</h4>
                        <p>Barcelona, Spain</p>
                    </div>
                </div>

                <div class="contact-card">
                    <div class="contact-icon">
                        <i class="fab fa-linkedin"></i>
                    </div>
                    <div class="contact-details">
                        <h4>LinkedIn</h4>
                        <a href="https://www.linkedin.com/in/manuel-vidal-dominguez/" target="_blank">Manuel Vidal Dominguez</a>
                    </div>
                </div>
            </div>

            <div class="contact-form-container">
                <h3 class="contact-form-title">Send Me a Message</h3>
                <!--
                  NOTE: This form requires backend integration or a service like Formspree
                  to actually send emails. Currently, it only has frontend structure.
                  You can add an `action` attribute pointing to your endpoint/service
                  and potentially some client-side validation script.
                -->
                <form class="contact-form" id="contact-form">
                    <div class="form-group">
                        <label for="name" class="form-label">Name</label>
                        <input type="text" id="name" name="name" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" id="email" name="email" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="subject" class="form-label">Subject</label>
                        <input type="text" id="subject" name="subject" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label for="message" class="form-label">Message</label>
                        <textarea id="message" name="message" class="form-control" required></textarea>
                    </div>
                    <button type="submit" class="form-submit btn btn-primary">
                        Send Message
                    </button>
                    <p id="form-status" class="form-status"></p> <!-- For status messages -->
                </form>
            </div>
        </div>
    </div>
</section>

<style>
    .contact {
        background-color: var(--light);
        position: relative;
        overflow: hidden;
    }

    .contact::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle at 20% 30%, rgba(16, 185, 129, 0.07), transparent 50%);
        pointer-events: none;
        z-index: 0;
    }

    .contact-grid {
        display: grid;
        /* Default to 1 column, switch to 2 columns on larger screens */
        grid-template-columns: 1fr;
        gap: 3rem;
        position: relative;
        z-index: 1;
    }

    /* Media query for two-column layout */
    @media (min-width: 992px) {
        .contact-grid {
             grid-template-columns: 1fr 1.2fr; /* Adjust ratio as needed */
             gap: 4rem;
        }
    }

    .contact-info {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    .contact-card {
        background-color: var(--white);
        border-radius: var(--radius);
        padding: 1.5rem;
        display: flex;
        align-items: center;
        gap: 1.5rem;
        box-shadow: var(--shadow);
        transition: var(--transition);
    }

    .contact-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
    }

    .contact-icon {
        width: 50px;
        height: 50px;
        background-color: rgba(37, 99, 235, 0.1);
        color: var(--primary);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 12px;
        font-size: 1.5rem;
        transition: var(--transition);
        flex-shrink: 0;
    }

    .contact-card:hover .contact-icon {
        background-color: var(--primary);
        color: var(--white);
    }

    .contact-details h4 {
        margin-bottom: 0.5rem;
        font-size: clamp(1rem, 2vw, 1.1rem);
        color: var(--dark);
    }

    .contact-details a,
    .contact-details p {
        color: var(--gray);
        text-decoration: none;
        transition: var(--transition);
        font-size: 0.95rem;
        word-break: break-word; /* Prevent long links/emails overflowing */
    }

    .contact-details a:hover {
        color: var(--primary);
    }

    .contact-form-container {
        background-color: var(--white);
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        padding: 2.5rem;
        height: fit-content; /* Allow container to size to content */
    }

    .contact-form-title {
        margin-bottom: 2rem;
        font-size: clamp(1.3rem, 2.5vw, 1.5rem);
        color: var(--dark);
        font-weight: 700;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-label {
        display: block;
        margin-bottom: 0.75rem;
        font-weight: 600;
        color: var(--dark);
        font-size: 0.9rem;
    }

    .form-control {
        width: 100%;
        padding: 0.875rem 1.25rem;
        border: 1px solid rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        font-family: var(--font-sans);
        font-size: 1rem;
        transition: var(--transition);
        background-color: var(--light); /* Subtle background */
    }

    .form-control:focus {
        outline: none;
        border-color: var(--primary);
        box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.2); /* Focus ring */
        background-color: var(--white);
    }

    textarea.form-control {
        min-height: 150px;
        resize: vertical;
    }

    .form-submit {
        /* Inherits .btn styles */
        width: 100%;
        font-size: 1rem;
        padding: 1rem;
        /* Override specific .btn styles if needed */
    }
    .form-submit.btn-primary {
        background-color: var(--primary);
        color: var(--white);
        border: none;
    }
    .form-submit.btn-primary:hover {
         background-color: var(--primary-dark);
         transform: translateY(-3px);
         box-shadow: 0 6px 16px rgba(37, 99, 235, 0.3);
    }

    .form-status {
        margin-top: 1rem;
        font-weight: 500;
    }
    .form-status.success {
        color: var(--secondary);
    }
    .form-status.error {
        color: #ef4444; /* Red color for errors */
    }

    @media (max-width: 768px) {
        .contact-form-container {
            padding: 2rem;
        }
    }

    @media (max-width: 480px) {
        .contact-card {
            padding: 1.25rem;
            gap: 1rem;
        }
        .contact-icon {
            width: 40px;
            height: 40px;
            font-size: 1.3rem;
        }
        .contact-form-container {
            padding: 1.5rem;
        }
    }
</style>

<script>
    // Basic form submission handling (can be expanded)
    // This only prevents default submission; actual sending needs backend/service
    const form = document.getElementById('contact-form');
    const formStatus = document.getElementById('form-status');

    if (form && formStatus) {
        form.addEventListener('submit', async (e) => {
            e.preventDefault(); // Prevent default browser submission
            formStatus.textContent = 'Sending...';
            formStatus.className = 'form-status'; // Reset class

            // Simulate network request
            await new Promise(resolve => setTimeout(resolve, 1000));

            // ** Placeholder for actual form submission logic **
            // Example: using fetch to send data to Formspree or a custom endpoint
            // const formData = new FormData(form);
            // try {
            //     const response = await fetch('YOUR_ENDPOINT_HERE', {
            //         method: 'POST',
            //         body: formData,
            //         headers: {
            //             'Accept': 'application/json'
            //         }
            //     });
            //     if (response.ok) {
            //         formStatus.textContent = 'Message sent successfully!';
            //         formStatus.classList.add('success');
            //         form.reset();
            //     } else {
            //         formStatus.textContent = 'Oops! There was a problem sending your message.';
            //         formStatus.classList.add('error');
            //     }
            // } catch (error) {
            //     console.error('Form submission error:', error);
            //     formStatus.textContent = 'Oops! There was a problem sending your message.';
            //     formStatus.classList.add('error');
            // }

            // Remove this placeholder part when implementing actual submission
            formStatus.textContent = 'Form submitted (simulated). Backend needed!';
            formStatus.classList.add('success');
            // form.reset();

            // Clear status message after a few seconds
            setTimeout(() => {
                formStatus.textContent = '';
                formStatus.className = 'form-status';
            }, 5000);
        });
    }
</script> 